cuda
112120
{'abnormal': 0, 'normal': 1}
SqueezeNet(
  (features): Sequential(
    (0): Conv2d(3, 96, kernel_size=(7, 7), stride=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (3): Fire(
      (squeeze): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (4): Fire(
      (squeeze): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (5): Fire(
      (squeeze): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (6): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (7): Fire(
      (squeeze): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (8): Fire(
      (squeeze): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (9): Fire(
      (squeeze): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (10): Fire(
      (squeeze): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (11): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (12): Fire(
      (squeeze): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Conv2d(512, 2, kernel_size=(1, 1), stride=(1, 1))
    (2): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
Epoch 0/27
----------
Loss after 19168 examples: 0.682
Loss after 38368 examples: 0.607
Loss after 57568 examples: 0.677
Loss after 76768 examples: 0.619
Loss after 95968 examples: 0.598
Train Accuracy tensor(0.5908, dtype=torch.float64)
Validation Loss is 0.660681711769104
Validation Accuracy is 0.6186

Epoch 1/27
----------
Loss after 115168 examples: 0.642
Loss after 134368 examples: 0.750
Loss after 153568 examples: 0.722
Loss after 172768 examples: 0.681
Loss after 191968 examples: 0.591
Train Accuracy tensor(0.6415, dtype=torch.float64)
Validation Loss is 0.6283995976448059
Validation Accuracy is 0.6654

Epoch 2/27
----------
Loss after 211168 examples: 0.660
Loss after 230368 examples: 0.542
Loss after 249568 examples: 0.521
Loss after 268768 examples: 0.804
Loss after 287968 examples: 0.647
Train Accuracy tensor(0.6550, dtype=torch.float64)
Validation Loss is 0.6156249597549438
Validation Accuracy is 0.6702

Epoch 3/27
----------
Loss after 307168 examples: 0.678
Loss after 326368 examples: 0.645
Loss after 345568 examples: 0.615
Loss after 364768 examples: 0.621
Loss after 383968 examples: 0.733
Train Accuracy tensor(0.6615, dtype=torch.float64)
Validation Loss is 0.6170138829231262
Validation Accuracy is 0.674

Epoch 4/27
----------
Loss after 403168 examples: 0.629
Loss after 422368 examples: 0.685
Loss after 441568 examples: 0.597
Loss after 460768 examples: 0.596
Loss after 479968 examples: 0.534
Loss after 499168 examples: 0.651
Train Accuracy tensor(0.6676, dtype=torch.float64)
Validation Loss is 0.6143989006042481
Validation Accuracy is 0.6676000000000001

Epoch 5/27
----------
Loss after 518368 examples: 0.604
Loss after 537568 examples: 0.534
Loss after 556768 examples: 0.609
Loss after 575968 examples: 0.601
Loss after 595168 examples: 0.572
Train Accuracy tensor(0.6714, dtype=torch.float64)
Validation Loss is 0.6110335518836975
Validation Accuracy is 0.6712

Epoch 6/27
----------
Loss after 614368 examples: 0.541
Loss after 633568 examples: 0.667
Loss after 652768 examples: 0.567
Loss after 671968 examples: 0.616
Loss after 691168 examples: 0.633
Train Accuracy tensor(0.6761, dtype=torch.float64)
Validation Loss is 0.6109697324752807
Validation Accuracy is 0.673

Epoch 7/27
----------
Loss after 710368 examples: 0.641
Loss after 729568 examples: 0.622
Loss after 748768 examples: 0.418
Loss after 767968 examples: 0.668
Loss after 787168 examples: 0.562
Train Accuracy tensor(0.6756, dtype=torch.float64)
Validation Loss is 0.6059871347427368
Validation Accuracy is 0.6772

Epoch 8/27
----------
Loss after 806368 examples: 0.583
Loss after 825568 examples: 0.631
Loss after 844768 examples: 0.699
Loss after 863968 examples: 0.593
Loss after 883168 examples: 0.625
Train Accuracy tensor(0.6780, dtype=torch.float64)
Validation Loss is 0.60003284034729
Validation Accuracy is 0.6824

Epoch 9/27
----------
Loss after 902368 examples: 0.622
Loss after 921568 examples: 0.419
Loss after 940768 examples: 0.599
Loss after 959968 examples: 0.560
Loss after 979168 examples: 0.724
Loss after 998368 examples: 0.557
Train Accuracy tensor(0.6787, dtype=torch.float64)
Validation Loss is 0.6048077259063721
Validation Accuracy is 0.686

Epoch 10/27
----------
Loss after 1017568 examples: 0.709
Loss after 1036768 examples: 0.864
Loss after 1055968 examples: 0.488
Loss after 1075168 examples: 0.590
Loss after 1094368 examples: 0.608
Train Accuracy tensor(0.6798, dtype=torch.float64)
Validation Loss is 0.6074114357948304
Validation Accuracy is 0.6852

Epoch 11/27
----------
Loss after 1113568 examples: 0.635
Loss after 1132768 examples: 0.695
Loss after 1151968 examples: 0.454
Loss after 1171168 examples: 0.650
Loss after 1190368 examples: 0.522
Train Accuracy tensor(0.6820, dtype=torch.float64)
Validation Loss is 0.6048281578063965
Validation Accuracy is 0.6834

Epoch 12/27
----------
Loss after 1209568 examples: 0.603
Loss after 1228768 examples: 0.589
Loss after 1247968 examples: 0.535
Loss after 1267168 examples: 0.529
Loss after 1286368 examples: 0.711
Train Accuracy tensor(0.6834, dtype=torch.float64)
Validation Loss is 0.6030632946014405
Validation Accuracy is 0.6826

Epoch 13/27
----------
Loss after 1305568 examples: 0.619
Loss after 1324768 examples: 0.609
Loss after 1343968 examples: 0.626
Loss after 1363168 examples: 0.765
Loss after 1382368 examples: 0.531
Train Accuracy tensor(0.6824, dtype=torch.float64)
Validation Loss is 0.6090228337287903
Validation Accuracy is 0.685

Epoch 14/27
----------
Loss after 1401568 examples: 0.680
Loss after 1420768 examples: 0.634
Loss after 1439968 examples: 0.594
Loss after 1459168 examples: 0.631
Loss after 1478368 examples: 0.544
Loss after 1497568 examples: 0.610
Train Accuracy tensor(0.6816, dtype=torch.float64)
Validation Loss is 0.605911114692688
Validation Accuracy is 0.6796

Epoch 15/27
----------
Loss after 1516768 examples: 0.462
Loss after 1535968 examples: 0.498
Loss after 1555168 examples: 0.623
Loss after 1574368 examples: 0.452
Loss after 1593568 examples: 0.599
Train Accuracy tensor(0.6851, dtype=torch.float64)
Validation Loss is 0.6009388442039489
Validation Accuracy is 0.6884

Epoch 16/27
----------
Loss after 1612768 examples: 0.652
Loss after 1631968 examples: 0.633
Loss after 1651168 examples: 0.687
Loss after 1670368 examples: 0.627
Loss after 1689568 examples: 0.667
Train Accuracy tensor(0.6854, dtype=torch.float64)
Validation Loss is 0.6147599592208862
Validation Accuracy is 0.676

Epoch 17/27
----------
Loss after 1708768 examples: 0.689
Loss after 1727968 examples: 0.702
Loss after 1747168 examples: 0.580
Loss after 1766368 examples: 0.527
Loss after 1785568 examples: 0.736
Train Accuracy tensor(0.6854, dtype=torch.float64)
Validation Loss is 0.6018022117614746
Validation Accuracy is 0.6826

Epoch 18/27
----------
Loss after 1804768 examples: 0.572
Loss after 1823968 examples: 0.523
Loss after 1843168 examples: 0.789
Loss after 1862368 examples: 0.685
Loss after 1881568 examples: 0.621
Train Accuracy tensor(0.6866, dtype=torch.float64)
Validation Loss is 0.5991722059249878
Validation Accuracy is 0.6858000000000001

Epoch 19/27
----------
Loss after 1900768 examples: 0.673
Loss after 1919968 examples: 0.696
Loss after 1939168 examples: 0.504
Loss after 1958368 examples: 0.542
Loss after 1977568 examples: 0.570
Loss after 1996768 examples: 0.619
Train Accuracy tensor(0.6876, dtype=torch.float64)
Validation Loss is 0.5982095801353454
Validation Accuracy is 0.682

Epoch 20/27
----------
Loss after 2015968 examples: 0.707
Loss after 2035168 examples: 0.547
Loss after 2054368 examples: 0.554
Loss after 2073568 examples: 0.702
Loss after 2092768 examples: 0.724
Train Accuracy tensor(0.6864, dtype=torch.float64)
Validation Loss is 0.5991180912017823
Validation Accuracy is 0.6878000000000001

Epoch 21/27
----------
Loss after 2111968 examples: 0.463
Loss after 2131168 examples: 0.757
Loss after 2150368 examples: 0.626
Loss after 2169568 examples: 0.755
Loss after 2188768 examples: 0.676
Train Accuracy tensor(0.6886, dtype=torch.float64)
Validation Loss is 0.5972969669342041
Validation Accuracy is 0.6890000000000001

Epoch 22/27
----------
Loss after 2207968 examples: 0.662
Loss after 2227168 examples: 0.494
Loss after 2246368 examples: 0.537
Loss after 2265568 examples: 0.609
Loss after 2284768 examples: 0.475
Train Accuracy tensor(0.6873, dtype=torch.float64)
Validation Loss is 0.5979617240905761
Validation Accuracy is 0.6878000000000001

Epoch 23/27
----------
Loss after 2303968 examples: 0.793
Loss after 2323168 examples: 0.598
Loss after 2342368 examples: 0.601
Loss after 2361568 examples: 0.514
Loss after 2380768 examples: 0.652
Loss after 2399968 examples: 0.511
Train Accuracy tensor(0.6898, dtype=torch.float64)
Validation Loss is 0.6161265027046203
Validation Accuracy is 0.6744

Epoch 24/27
----------
Loss after 2419168 examples: 0.699
Loss after 2438368 examples: 0.584
Loss after 2457568 examples: 0.586
Loss after 2476768 examples: 0.535
Loss after 2495968 examples: 0.521
Train Accuracy tensor(0.6896, dtype=torch.float64)
Validation Loss is 0.5979973114013671
Validation Accuracy is 0.6938000000000001

Epoch 25/27
----------
Loss after 2515168 examples: 0.741
Loss after 2534368 examples: 0.676
Loss after 2553568 examples: 0.537
Loss after 2572768 examples: 0.513
Loss after 2591968 examples: 0.616
Train Accuracy tensor(0.6888, dtype=torch.float64)
Validation Loss is 0.602619897556305
Validation Accuracy is 0.6898000000000001

Epoch 26/27
----------
Loss after 2611168 examples: 0.833
Loss after 2630368 examples: 0.735
Loss after 2649568 examples: 0.566
Loss after 2668768 examples: 0.610
Loss after 2687968 examples: 0.631
Train Accuracy tensor(0.6888, dtype=torch.float64)
Validation Loss is 0.5940571913719177
Validation Accuracy is 0.6938000000000001

Epoch 27/27
----------
Loss after 2707168 examples: 0.586
Loss after 2726368 examples: 0.549
Loss after 2745568 examples: 0.532
Loss after 2764768 examples: 0.520
Loss after 2783968 examples: 0.545
Train Accuracy tensor(0.6895, dtype=torch.float64)
Validation Loss is 0.5981140703201294
Validation Accuracy is 0.6866

Training complete in 80m 58s
Test Loss is 0.6027037565627794
Test Accuracy is 0.6816011235955057
