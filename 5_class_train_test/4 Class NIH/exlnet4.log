cuda
52621
{'Atelectasis': 0, 'Cardiomegaly': 1, 'Consolidation': 2, 'Effusion': 3, 'No Finding': 4, 'Pneumothorax': 5}
32319
SqueezeNet(
  (features): Sequential(
    (0): Conv2d(3, 96, kernel_size=(7, 7), stride=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (3): Fire(
      (squeeze): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (4): Fire(
      (squeeze): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (5): Fire(
      (squeeze): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (6): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (7): Fire(
      (squeeze): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (8): Fire(
      (squeeze): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (9): Fire(
      (squeeze): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (10): Fire(
      (squeeze): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (11): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (12): Fire(
      (squeeze): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))
    (2): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
Epoch 0/39
-------------------------
Loss after 22368 examples: 1.185
Train Accuracy tensor(0.4047, dtype=torch.float64)
Validation Loss is 1.2428551959991454
Validation Accuracy is 0.41200000000000003

One of the best validation accuracy found.

Epoch 1/39
-------------------------
Loss after 44752 examples: 1.163
Train Accuracy tensor(0.4249, dtype=torch.float64)
Validation Loss is 1.2096450262069702
Validation Accuracy is 0.4435

One of the best validation accuracy found.

Epoch 2/39
-------------------------
Loss after 67136 examples: 1.214
Loss after 89536 examples: 1.170
Train Accuracy tensor(0.4446, dtype=torch.float64)
Validation Loss is 1.2003729391098021
Validation Accuracy is 0.452

One of the best validation accuracy found.

Epoch 3/39
-------------------------
Loss after 111920 examples: 1.218
Train Accuracy tensor(0.4496, dtype=torch.float64)
Validation Loss is 1.198985634803772
Validation Accuracy is 0.457

One of the best validation accuracy found.

Epoch 4/39
-------------------------
Loss after 134304 examples: 1.242
Train Accuracy tensor(0.4575, dtype=torch.float64)
Validation Loss is 1.1793108081817627
Validation Accuracy is 0.466

One of the best validation accuracy found.

Epoch 5/39
-------------------------
Loss after 156688 examples: 1.219
Loss after 179088 examples: 1.175
Train Accuracy tensor(0.4702, dtype=torch.float64)
Validation Loss is 1.1853458852767944
Validation Accuracy is 0.467

One of the best validation accuracy found.

Epoch 6/39
-------------------------
Loss after 201472 examples: 1.068
Train Accuracy tensor(0.4795, dtype=torch.float64)
Validation Loss is 1.1352544860839844
Validation Accuracy is 0.4865

One of the best validation accuracy found.

Epoch 7/39
-------------------------
Loss after 223856 examples: 1.368
Train Accuracy tensor(0.4863, dtype=torch.float64)
Validation Loss is 1.132143720626831
Validation Accuracy is 0.4955

One of the best validation accuracy found.

Epoch 8/39
-------------------------
Loss after 246240 examples: 1.080
Loss after 268640 examples: 1.067
Train Accuracy tensor(0.4935, dtype=torch.float64)
Validation Loss is 1.1102187614440917
Validation Accuracy is 0.503

One of the best validation accuracy found.

Epoch 9/39
-------------------------
Loss after 291024 examples: 1.197
Train Accuracy tensor(0.4983, dtype=torch.float64)
Validation Loss is 1.1025891513824464
Validation Accuracy is 0.5015000000000001

Epoch 10/39
-------------------------
Loss after 313408 examples: 0.993
Train Accuracy tensor(0.5006, dtype=torch.float64)
Validation Loss is 2.9786683712005617
Validation Accuracy is 0.513

One of the best validation accuracy found.

Epoch 11/39
-------------------------
Loss after 335792 examples: 1.201
Loss after 358192 examples: 1.241
Train Accuracy tensor(0.5044, dtype=torch.float64)
Validation Loss is 1.094210241317749
Validation Accuracy is 0.5245

One of the best validation accuracy found.

Epoch 12/39
-------------------------
Loss after 380576 examples: 1.078
Train Accuracy tensor(0.5082, dtype=torch.float64)
Validation Loss is 1.1438665857315065
Validation Accuracy is 0.5165

Epoch 13/39
-------------------------
Loss after 402960 examples: 1.186
Train Accuracy tensor(0.5112, dtype=torch.float64)
Validation Loss is 1.0883428020477295
Validation Accuracy is 0.526

One of the best validation accuracy found.

Epoch 14/39
-------------------------
Loss after 425344 examples: 0.873
Loss after 447744 examples: 0.999
Train Accuracy tensor(0.5139, dtype=torch.float64)
Validation Loss is 1.3149338140487672
Validation Accuracy is 0.517

Epoch 15/39
-------------------------
Loss after 470128 examples: 1.068
Train Accuracy tensor(0.5154, dtype=torch.float64)
Validation Loss is 1.0932716760635377
Validation Accuracy is 0.504

Epoch 16/39
-------------------------
Loss after 492512 examples: 0.789
Train Accuracy tensor(0.5176, dtype=torch.float64)
Validation Loss is 1.085819812774658
Validation Accuracy is 0.5135

Epoch 17/39
-------------------------
Loss after 514896 examples: 1.029
Loss after 537296 examples: 1.041
Train Accuracy tensor(0.5196, dtype=torch.float64)
Validation Loss is 1.0868596029281616
Validation Accuracy is 0.5325

One of the best validation accuracy found.

Epoch 18/39
-------------------------
Loss after 559680 examples: 1.262
Train Accuracy tensor(0.5207, dtype=torch.float64)
Validation Loss is 1.1123505687713624
Validation Accuracy is 0.4955

Epoch 19/39
-------------------------
Loss after 582064 examples: 1.005
Train Accuracy tensor(0.5225, dtype=torch.float64)
Validation Loss is 1.0798928980827331
Validation Accuracy is 0.527

Epoch 20/39
-------------------------
Loss after 604448 examples: 0.938
Loss after 626848 examples: 1.267
Train Accuracy tensor(0.5256, dtype=torch.float64)
Validation Loss is 1.0823359870910645
Validation Accuracy is 0.53

Epoch 21/39
-------------------------
Loss after 649232 examples: 0.939
Train Accuracy tensor(0.5249, dtype=torch.float64)
Validation Loss is 1.0958260250091554
Validation Accuracy is 0.4995

Epoch 22/39
-------------------------
Loss after 671616 examples: 1.179
Train Accuracy tensor(0.5298, dtype=torch.float64)
Validation Loss is 1.0723573055267335
Validation Accuracy is 0.5285

Epoch 23/39
-------------------------
Loss after 694000 examples: 1.103
Loss after 716400 examples: 1.053
Train Accuracy tensor(0.5291, dtype=torch.float64)
Validation Loss is 1.0828947849273682
Validation Accuracy is 0.5165

Epoch 24/39
-------------------------
Loss after 738784 examples: 1.033
Train Accuracy tensor(0.5309, dtype=torch.float64)
Validation Loss is 1.072782488822937
Validation Accuracy is 0.529

Epoch 25/39
-------------------------
Loss after 761168 examples: 1.155
Train Accuracy tensor(0.5306, dtype=torch.float64)
Validation Loss is 1.0894056720733643
Validation Accuracy is 0.521

Epoch 26/39
-------------------------
Loss after 783552 examples: 0.981
Loss after 805952 examples: 0.925
Train Accuracy tensor(0.5329, dtype=torch.float64)
Validation Loss is 1.0823770503997803
Validation Accuracy is 0.5185

Epoch 27/39
-------------------------
Loss after 828336 examples: 1.049
Train Accuracy tensor(0.5315, dtype=torch.float64)
Validation Loss is 1.0797661972045898
Validation Accuracy is 0.522

Epoch 28/39
-------------------------
Loss after 850720 examples: 0.899
Train Accuracy tensor(0.5363, dtype=torch.float64)
Validation Loss is 1.0848778591156005
Validation Accuracy is 0.5135

Epoch 29/39
-------------------------
Loss after 873104 examples: 1.153
Loss after 895504 examples: 1.152
Train Accuracy tensor(0.5368, dtype=torch.float64)
Validation Loss is 1.0793719043731689
Validation Accuracy is 0.538

One of the best validation accuracy found.

Epoch 30/39
-------------------------
Loss after 917888 examples: 1.113
Train Accuracy tensor(0.5398, dtype=torch.float64)
Validation Loss is 1.085456265449524
Validation Accuracy is 0.513

Epoch 31/39
-------------------------
Loss after 940272 examples: 0.925
Train Accuracy tensor(0.5425, dtype=torch.float64)
Validation Loss is 1.0696009283065795
Validation Accuracy is 0.534

Epoch 32/39
-------------------------
Loss after 962656 examples: 0.911
Loss after 985056 examples: 1.071
Train Accuracy tensor(0.5406, dtype=torch.float64)
Validation Loss is 1.084198504447937
Validation Accuracy is 0.52

Epoch 33/39
-------------------------
Loss after 1007440 examples: 1.004
Train Accuracy tensor(0.5437, dtype=torch.float64)
Validation Loss is 1.077788655281067
Validation Accuracy is 0.5215

Epoch 34/39
-------------------------
Loss after 1029824 examples: 0.909
Train Accuracy tensor(0.5454, dtype=torch.float64)
Validation Loss is 1.0859278974533082
Validation Accuracy is 0.521

Epoch 35/39
-------------------------
Loss after 1052208 examples: 1.269
Loss after 1074608 examples: 1.045
Train Accuracy tensor(0.5460, dtype=torch.float64)
Validation Loss is 1.0795907554626465
Validation Accuracy is 0.5195

Epoch 36/39
-------------------------
Loss after 1096992 examples: 0.911
Train Accuracy tensor(0.5478, dtype=torch.float64)
Validation Loss is 1.0855263633728027
Validation Accuracy is 0.5195

Epoch 37/39
-------------------------
Loss after 1119376 examples: 1.236
Train Accuracy tensor(0.5506, dtype=torch.float64)
Validation Loss is 1.086069489479065
Validation Accuracy is 0.516

Epoch 38/39
-------------------------
Loss after 1141760 examples: 0.843
Loss after 1164160 examples: 1.120
Train Accuracy tensor(0.5523, dtype=torch.float64)
Validation Loss is 1.0828550186157226
Validation Accuracy is 0.5245

Epoch 39/39
-------------------------
Loss after 1186544 examples: 1.232
Train Accuracy tensor(0.5487, dtype=torch.float64)
Validation Loss is 1.0854937934875488
Validation Accuracy is 0.513

Training complete in 40m 54s
Test Loss is 1.11808713588595
Test Accuracy is 0.49843260188087773
