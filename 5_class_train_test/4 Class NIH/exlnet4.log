cuda
52621
{'Atelectasis': 0, 'Cardiomegaly': 1, 'Consolidation': 2, 'Effusion': 3, 'No Finding': 4, 'Pneumothorax': 5}
32319
SqueezeNet(
  (features): Sequential(
    (0): Conv2d(3, 96, kernel_size=(7, 7), stride=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (3): Fire(
      (squeeze): Conv2d(96, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (4): Fire(
      (squeeze): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), groups=16)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (5): Fire(
      (squeeze): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (6): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (7): Fire(
      (squeeze): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), groups=32)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (8): Fire(
      (squeeze): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      )
      (expand3x3_activation): ReLU(inplace=True)
    )
    (9): Fire(
      (squeeze): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1), groups=48)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (10): Fire(
      (squeeze): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
    (11): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (12): Fire(
      (squeeze): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), groups=64)
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64)
      (expand3x3_activation): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))
    (2): AdaptiveAvgPool2d(output_size=(1, 1))
  )
)
Epoch 0/29
-------------------------
Loss after 22368 examples: 1.010
Train Accuracy tensor(0.5383, dtype=torch.float64)
Validation Loss is 1.2511085805892945
Validation Accuracy is 0.5275

One of the best validation accuracy found.

Epoch 1/29
-------------------------
Loss after 44752 examples: 1.029
Train Accuracy tensor(0.5408, dtype=torch.float64)
Validation Loss is 1.0898317718505859
Validation Accuracy is 0.518

Epoch 2/29
-------------------------
Loss after 67136 examples: 1.063
Loss after 89536 examples: 0.987
Train Accuracy tensor(0.5422, dtype=torch.float64)
Validation Loss is 1.0716693725585937
Validation Accuracy is 0.526

Epoch 3/29
-------------------------
Loss after 111920 examples: 1.005
Train Accuracy tensor(0.5443, dtype=torch.float64)
Validation Loss is 1.074812614917755
Validation Accuracy is 0.5195

Epoch 4/29
-------------------------
Loss after 134304 examples: 1.122
Train Accuracy tensor(0.5490, dtype=torch.float64)
Validation Loss is 1.078418221473694
Validation Accuracy is 0.522

Epoch 5/29
-------------------------
Loss after 156688 examples: 1.176
Loss after 179088 examples: 0.860
Train Accuracy tensor(0.5454, dtype=torch.float64)
Validation Loss is 1.0920230722427369
Validation Accuracy is 0.513

Epoch 6/29
-------------------------
Loss after 201472 examples: 0.962
Train Accuracy tensor(0.5484, dtype=torch.float64)
Validation Loss is 1.0957277898788451
Validation Accuracy is 0.512

Epoch 7/29
-------------------------
Loss after 223856 examples: 1.409
Train Accuracy tensor(0.5502, dtype=torch.float64)
Validation Loss is 1.0851798505783081
Validation Accuracy is 0.527

Epoch 8/29
-------------------------
Loss after 246240 examples: 1.059
Loss after 268640 examples: 1.073
Train Accuracy tensor(0.5519, dtype=torch.float64)
Validation Loss is 1.0831214456558227
Validation Accuracy is 0.5165

Epoch 9/29
-------------------------
Loss after 291024 examples: 1.083
Train Accuracy tensor(0.5518, dtype=torch.float64)
Validation Loss is 1.0893179140090943
Validation Accuracy is 0.5165

Epoch 10/29
-------------------------
Loss after 313408 examples: 0.993
Train Accuracy tensor(0.5525, dtype=torch.float64)
Validation Loss is 1.080387972831726
Validation Accuracy is 0.517

Epoch 11/29
-------------------------
Loss after 335792 examples: 1.073
Loss after 358192 examples: 1.136
Train Accuracy tensor(0.5567, dtype=torch.float64)
Validation Loss is 1.0868643598556518
Validation Accuracy is 0.5155

Epoch 12/29
-------------------------
Loss after 380576 examples: 0.987
Train Accuracy tensor(0.5570, dtype=torch.float64)
Validation Loss is 1.0889299297332764
Validation Accuracy is 0.5325

One of the best validation accuracy found.

Epoch 13/29
-------------------------
Loss after 402960 examples: 1.029
Train Accuracy tensor(0.5593, dtype=torch.float64)
Validation Loss is 1.0954523725509644
Validation Accuracy is 0.514

Epoch 14/29
-------------------------
Loss after 425344 examples: 0.714
Loss after 447744 examples: 0.879
Train Accuracy tensor(0.5601, dtype=torch.float64)
Validation Loss is 1.0961352224349976
Validation Accuracy is 0.5165

Epoch 15/29
-------------------------
Loss after 470128 examples: 0.954
Train Accuracy tensor(0.5579, dtype=torch.float64)
Validation Loss is 1.1072890853881836
Validation Accuracy is 0.509

Epoch 16/29
-------------------------
Loss after 492512 examples: 0.725
Train Accuracy tensor(0.5594, dtype=torch.float64)
Validation Loss is 1.0886322498321532
Validation Accuracy is 0.5125

Epoch 17/29
-------------------------
Loss after 514896 examples: 0.998
Loss after 537296 examples: 0.847
Train Accuracy tensor(0.5618, dtype=torch.float64)
Validation Loss is 1.1054083843231202
Validation Accuracy is 0.517

Epoch 18/29
-------------------------
Loss after 559680 examples: 1.076
Train Accuracy tensor(0.5615, dtype=torch.float64)
Validation Loss is 1.1216500272750856
Validation Accuracy is 0.516

Epoch 19/29
-------------------------
Loss after 582064 examples: 0.941
Train Accuracy tensor(0.5635, dtype=torch.float64)
Validation Loss is 1.1250757246017455
Validation Accuracy is 0.506

Epoch 20/29
-------------------------
Loss after 604448 examples: 0.817
Loss after 626848 examples: 1.234
Train Accuracy tensor(0.5657, dtype=torch.float64)
Validation Loss is 1.1068761377334595
Validation Accuracy is 0.508

Epoch 21/29
-------------------------
Loss after 649232 examples: 0.974
Train Accuracy tensor(0.5661, dtype=torch.float64)
Validation Loss is 1.1110200119018554
Validation Accuracy is 0.489

Epoch 22/29
-------------------------
Loss after 671616 examples: 1.016
Train Accuracy tensor(0.5703, dtype=torch.float64)
Validation Loss is 1.1047026414871215
Validation Accuracy is 0.512

Epoch 23/29
-------------------------
Loss after 694000 examples: 0.963
Loss after 716400 examples: 1.060
Train Accuracy tensor(0.5697, dtype=torch.float64)
Validation Loss is 1.1268085355758668
Validation Accuracy is 0.4965

Epoch 24/29
-------------------------
Loss after 738784 examples: 0.811
Train Accuracy tensor(0.5704, dtype=torch.float64)
Validation Loss is 1.1326424770355226
Validation Accuracy is 0.5065000000000001

Epoch 25/29
-------------------------
Loss after 761168 examples: 1.162
Train Accuracy tensor(0.5701, dtype=torch.float64)
Validation Loss is 1.1344900636672974
Validation Accuracy is 0.507

Epoch 26/29
-------------------------
Loss after 783552 examples: 0.891
Loss after 805952 examples: 0.837
Train Accuracy tensor(0.5732, dtype=torch.float64)
Validation Loss is 1.1398950290679932
Validation Accuracy is 0.5

Epoch 27/29
-------------------------
Loss after 828336 examples: 0.846
Train Accuracy tensor(0.5739, dtype=torch.float64)
Validation Loss is 1.1365567512512207
Validation Accuracy is 0.509

Epoch 28/29
-------------------------
Loss after 850720 examples: 0.874
Train Accuracy tensor(0.5764, dtype=torch.float64)
Validation Loss is 1.1356767230033875
Validation Accuracy is 0.507

Epoch 29/29
-------------------------
Loss after 873104 examples: 0.976
Loss after 895504 examples: 1.048
Train Accuracy tensor(0.5777, dtype=torch.float64)
Validation Loss is 1.1436298599243164
Validation Accuracy is 0.505

Training complete in 27m 4s
Test Loss is 1.1471348780449655
Test Accuracy is 0.5015673981191222
